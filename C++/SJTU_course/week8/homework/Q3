每一个具有虚函数的类都有一个虚函数表，里面按在类中声明的虚函数的顺序存放着虚函数的地址，这个虚函数表是这个类的所有对象所共有的。在每个具有虚函数的类的对象里面都有一个虚函数指针，这个指针指向虚表的首地址。
在类的继承中，如果是简单继承，即从包含有虚函数的基类派生一个类时，编译器就为这个类创建一个虚表。派生类的虚表先拷贝基类的虚表，然后重写的虚函数会覆盖对应的位置拷贝来的基类虚函数地址，同时，派生类自己的独有的虚函数会被添加在虚表的最后，当调用虚函数时，实际调用的是其在类的虚表中对应地址的值指向的函数。同时，如果派生类对象的地址被基类指针调用，那么，则会读取基类的虚表，从而调用其在基类的虚表中对应地址的值指向的函数，也就实现了类的多态性。
此外，如果是多继承的关系，那么在派生类的内部分别会有多个不同的虚函数指针，按照继承声明的顺序分别指向这些拷贝来的基类的虚表，在虚函数重写时，会覆盖每一个表中能够覆盖的虚函数地址，同时，派生类自己的虚函数会被添加在第一个虚表的最后。如果派生类对象的地址被基类指针调用，那么与简单继承同理，也能实现类的多态性。